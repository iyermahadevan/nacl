swagger: "2.0"
info:
  version: "0.0.1"
  title: Hello World App
# during dev, should point to your local machine
host: localhost:10010
# basePath prefixes all resource paths 
basePath: /
# 
schemes:
  # tip: remove http to make production-grade
  - http
  - https
# format of bodies a client can send (Content-Type)
consumes:
  - application/json
# format of the responses to the client (Accepts)
produces:
  - application/json
paths:
  /nacl:
    # our controller name
    x-swagger-router-controller: nacl
    post:
      operationId: save
      description: add a new nacl to the list
      # nacl info to be stored
      parameters:
        - name: title
          description: Nacl properties
          in: body
          required: true
          schema:
            $ref: "#/definitions/Nacl"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GeneralResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    get:
      operationId: getAll
      description: get the nacls list
      # define the type of response for Success "200" and Error
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GetNaclsListResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /nacl/{id}:
    # our controller name
    x-swagger-router-controller: nacl
    get:
      operationId: getOne
      description: get a nacl
      # define the type of response for Success "200" and Error
      parameters:
        - name: id
          type: string
          in: path
          required: true
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GetNaclResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    put:
      operationId: check
      description: check a nacl
      # define the parameters
      parameters:
        - name: id
          description: Nacl id
          type: string
          in: path
          required: true
        - name: title
          description: Nacl properties
          in: body
          required: true
          schema:
            $ref: "#/definitions/NaclCheck"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GeneralResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    delete:
      operationId: delNacl
      description: delete a nacl
      # define the parameters
      parameters:
        - name: id
          description: Nacl id
          type: string
          in: path
          required: true
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GeneralResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /swagger:
    x-swagger-pipe: swagger_raw
# complex objects have schema definitions
definitions:
  GetNaclResponse:
      required:
        - id
        - title
        - cidrBlock
        - egress
        - fromPort
        - toPort
        - protocol
        - ruleAction
        - ruleNumber
      properties:
        id:
          type: string
        title: 
          type: string
        cidrBlock: 
          type: string
        egress:
          type: boolean
        fromPort:
          type: number
        toPort:
          type: number
        protocol:
          type: number
        ruleAction:
          type: string
        ruleNumber:
          type: number
  Nacl:
    type: object
    properties:
      title: 
        type: string
        description: task object name
        example: "title1"
      cidrBlock: 
        type: string
        description: task object name
      egress:
        type: boolean
        description: task object name
      fromPort:
        type: number
        description: task object name
      toPort:
        type: number
        description: task object name
        example: 0
      protocol:
        type: number
        description: task object name
      ruleAction:
        type: string
        description: task object name
        enum: [allow, deny]
      ruleNumber:
        type: number
        description: task object name
    example:
      title: "title1"
      cidrBlock: "0.0.0.0/0"
      egress: false
      fromPort: 80
      toPort: 80
      protocol: 6
      ruleAction: "allow"
      ruleNumber: 100
    required:
      - title
      - cidrBlock
      - fromPort
      - toPort
      - protocol
      - ruleAction
      - ruleNumber
  NaclCheck:
    type: object
    properties:
      action:
        type: string
        description: task object name
        enum: [add, delete]
      title: 
        type: string
        description: task object name
        example: "title1"
      cidrBlock: 
        type: string
        description: task object name
      egress:
        type: boolean
        description: task object name
      fromPort:
        type: number
        description: task object name
      toPort:
        type: number
        description: task object name
        example: 0
      protocol:
        type: number
        description: task object name
      ruleAction:
        type: string
        description: task object name
        enum: [allow, deny]
      ruleNumber:
        type: number
        description: task object name
  GetNaclsListResponse:
    required:
      - nacls
    properties:
      # The array of nacls
      nacls:
        type: array
        items: 
          type: object
          properties:
            id:
              type: string
            title: 
              type: string
            cidrBlock: 
              type: string
            egress:
              type: boolean
            fromPort:
              type: number
            toPort:
              type: number
            protocol:
              type: number
            ruleAction:
              type: string
            ruleNumber:
              type: number    
  ErrorResponse:
    required:
      - message
    properties:
      message:
        type: string
  GeneralResponse:
    type: object
    properties:
      success:
        type: number
        description: returns 1 if successful
      description:
        type: string
        description: a short comment 
    required:
      - success
      - description